{"version":3,"sources":["components/Header/Header.jsx","components/ArmaPlan/ArmaPlan.jsx","components/Home/Home.jsx","components/Routes/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","alt","icon","faPhone","color","rotation","href","ArmaPlan","plate","useParams","Home","useState","Tipodoc","setTipodoc","Nmrdoc","setNmrdoc","Phone","setPhone","Plate","setPlate","Terms","setTerms","history","useHistory","onSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","then","r","json","data","push","value","onChange","target","type","placeholder","Routes","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAIe,SAASA,IACpB,OACI,mCACI,qBAAKC,UAAU,aAAf,SACI,qBAAKC,IAAI,mBAAmBC,IAAI,WAEpC,sBAAKF,UAAU,YAAf,UACI,2DACA,cAAC,IAAD,CAAiBG,KAAMC,IAASC,MAAM,UAAUC,SAAS,OACzD,mBAAGC,KAAK,KAAR,iC,WCXD,SAASC,IACpB,IAAOC,EAASC,cAATD,MACP,OACI,8BACI,mDAAsBA,EAAtB,S,iBCFG,SAASE,IAEtB,MAA8BC,qBAA9B,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA4BF,qBAA5B,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAA0BJ,qBAA1B,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA0BN,qBAA1B,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAA0BR,qBAA1B,mBAAOS,EAAP,KAAcC,EAAd,KACA,EAA0BV,qBAA1B,mBAEIW,GAFJ,UAEcC,eAiDd,OACE,qBAAKxB,UAAU,OAAf,SACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKC,IAAK,wBAAyBC,IAAI,cAAkB,uBACzD,4CAAW,uBACX,yCAAW,sDAA8B,uBACzC,uFAEA,wEAGF,qBAAKF,UAAU,OAAf,SACE,uBAAMyB,SAnCd,SAAuBC,GACrBA,EAAEC,iBACFC,MAAM,6CAA8C,CAClDC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBpB,UACAE,SACAE,QACAE,QACAE,YAGDa,MAAK,SAACC,GACL,OAAOA,EAAEC,UAEVF,MAAK,SAACG,GACLd,EAAQe,KAAK,aAAaD,EAAKlB,WAgB7B,UACE,mDACA,yBAAQoB,MAAO1B,EAAS2B,SAAU,SAACd,GAAD,OAAMZ,EAAWY,EAAEe,OAAOF,QAA5D,UACE,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,WAAd,0BAEF,uBAAOG,KAAK,OAAOH,MAAOxB,EAAQyB,SAAU,SAACd,GAAD,OAAMV,EAAUU,EAAEe,OAAOF,QAAQI,YAAY,gBAAe,uBACxG,uBAAOD,KAAK,OAAOH,MAAOtB,EAAOuB,SAAU,SAACd,GAAD,OAAMR,EAASQ,EAAEe,OAAOF,QAAQI,YAAY,YAAW,uBAClG,uBAAOD,KAAK,OAAOH,MAAOpB,EAAOqB,SAAU,SAACd,GAAD,OAAMN,EAASM,EAAEe,OAAOF,QAAQI,YAAY,UAAU,uBACjG,uBAAOD,KAAK,WAAWF,SAAU,SAACd,GAAD,OAAMJ,EAASI,EAAEe,OAAOF,UACzD,8CAAgB,mBAAGhC,KAAK,IAAR,wDAAhB,UAAiF,mBAAGA,KAAK,IAAR,qCAAjF,OACA,uBAAOmC,KAAK,SAASH,MAAM,aAAY,iCC/EnD,IAaeK,EAbA,kBACb,mCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,mBAAZ,SACE,cAACtC,EAAD,YCIOuC,EAXH,kBACV,qCACE,cAAC,EAAD,IACA,8BACE,cAAC,IAAD,UACE,cAAC,EAAD,YCDOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.574d9e10.chunk.js","sourcesContent":["\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {  faPhone } from '@fortawesome/free-solid-svg-icons'\r\nimport './Header.css'\r\nexport default function Header(){\r\n    return(\r\n        <header>\r\n            <div className=\"headerLogo\">\r\n                <img src='/images/logo.png' alt='logo'/>\r\n            </div>\r\n            <div className='contactUs'>\r\n                <span>¿Tienes alguna Duda?</span>\r\n                <FontAwesomeIcon icon={faPhone} color='#6F7DFF' rotation='90'></FontAwesomeIcon>\r\n                <a href='/#'>(01) 411 6001</a>\r\n            </div>\r\n        </header>\r\n    )\r\n}","import { useParams } from 'react-router-dom'\r\n\r\nexport default function ArmaPlan(){\r\n    const {plate} = useParams()\r\n    return(\r\n        <div>\r\n            <h1>Hola tu Placa es {plate} </h1>\r\n        </div>\r\n    )\r\n}","import './Home.css';\r\nimport { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nexport default function Home(){\r\n\r\n  const [Tipodoc, setTipodoc] = useState()\r\n  const [Nmrdoc, setNmrdoc] = useState()\r\n  const [Phone, setPhone] = useState()\r\n  const [Plate, setPlate] = useState()\r\n  const [Terms, setTerms] = useState()\r\n  const [error, setError] = useState()\r\n\r\n  let history = useHistory()\r\n\r\n  function validarFormulario() {\r\n    let error = {};\r\n    let formularioValido = true;\r\n\r\n    if (!Tipodoc) {\r\n        formularioValido = false;\r\n        error['Tipodoc'] = \"Por favor, selecciona un tipo de documento.\";\r\n    }\r\n\r\n    if (!Nmrdoc) {\r\n        formularioValido = false;\r\n        error[\"Nmrdoc\"] = \"Por favor, ingresa un numero de documento.\";\r\n    }\r\n\r\n    if (!Phone) {\r\n        formularioValido = false;\r\n        error[\"Phone\"] = \"Por favor, ingresa un Celular.\";\r\n    }\r\n\r\n    if (!Plate) {\r\n        formularioValido = false;\r\n        error[\"Placa\"] = \"Por favor, ingresa un numero de placa.\";\r\n    }\r\n    setError({error:error})\r\n  } \r\n  function handleSubmit (e){\r\n    e.preventDefault();\r\n    fetch('https://jsonplaceholder.typicode.com/posts', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        Tipodoc,\r\n        Nmrdoc,\r\n        Phone,\r\n        Plate,\r\n        Terms,\r\n      }),\r\n    })\r\n      .then((r) => {\r\n        return r.json();\r\n      })\r\n      .then((data) => {\r\n        history.push('/ArmaPlan/'+data.Plate)\r\n      });\r\n  }\r\n  return (\r\n    <div className=\"Home\">\r\n      <div className=\"Home_Content\">\r\n        <div className=\"Hero\">\r\n          <img src={'/images/homeImage.svg'} alt='homeimage'></img><br/>\r\n          <p>¡NUEVO! <br></br>\r\n          <h2>Seguro <b>Vehicular Tracking</b></h2><br/>\r\n          <span>Cuentanos donde le haras seguimiento a tu seguro</span>\r\n          </p>\r\n          <span>@ 2021 RIMAC Seguros y Reaseguros</span>\r\n        </div>\r\n\r\n        <div className=\"Form\">\r\n          <form onSubmit={handleSubmit}> \r\n            <h2>Dejanos tus datos</h2>\r\n            <select value={Tipodoc} onChange={(e)=> setTipodoc(e.target.value)}>\r\n              <option value=\"dni\">DNI</option>\r\n              <option value=\"ruc\">RUC</option>\r\n              <option value=\"passport\">PASAPORTE</option>\r\n            </select>\r\n            <input type=\"text\" value={Nmrdoc} onChange={(e)=> setNmrdoc(e.target.value)} placeholder=\"Nro. de doc\"/><br/>\r\n            <input type=\"text\" value={Phone} onChange={(e)=> setPhone(e.target.value)} placeholder=\"Celular\"/><br/>\r\n            <input type=\"text\" value={Plate} onChange={(e)=> setPlate(e.target.value)} placeholder=\"Placa\" /><br/>\r\n            <input type=\"checkbox\" onChange={(e)=> setTerms(e.target.value)}></input>\r\n            <span>Acepto la <a href=\"/\">Politica de Proteccion de Datos Personales</a> y los <a href=\"/\">Terminos y Condiciones.</a> </span>\r\n            <input type=\"submit\" value=\"COTIZALO\"/><br/>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","// Dependencies\r\nimport React from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\n// Resources\r\nimport ArmaPlan from '../ArmaPlan/ArmaPlan';\r\nimport Home from '../Home/Home';\r\n\r\nconst Routes = () => (\r\n  <>\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <Home />\r\n      </Route>\r\n      <Route path=\"/ArmaPlan/:plate\">\r\n        <ArmaPlan />\r\n      </Route>\r\n    </Switch>\r\n  </>\r\n);\r\n\r\nexport default Routes;\r\n","// Dependencies\r\nimport React from 'react';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n// Resources\r\nimport Header from './components/Header/Header';\r\nimport Routes from './components/Routes';\r\n\r\nconst App = () => (\r\n  <>\r\n    <Header />\r\n    <div>\r\n      <BrowserRouter>\r\n        <Routes />\r\n      </BrowserRouter>\r\n    </div>\r\n  </>\r\n);\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}